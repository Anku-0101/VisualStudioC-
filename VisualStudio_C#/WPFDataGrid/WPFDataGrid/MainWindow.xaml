<Window x:Class="WPFDataGrid.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:ns="clr-namespace:System;assembly=mscorlib"
        
        xmlns:local="clr-namespace:WPFDataGrid"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">

    <!-- System. (mscorelib is for enum classe so we have to include that -->
    <!--<Grid>
        <DataGrid Name="myDataGrid" />
    </Grid>
    By using this we'll get data grid in our UI, the normal properties will become text boxes, enums will become comboboxes
    boolean will become checkboxes also the column name will be picked up directly by data grid class and is same as property
    name.
    In order to provide our custom column name we have to use little different syntax shown below and also we need to include 
    objectDataProvider comcept-->
    <Window.Resources>
        <ObjectDataProvider x:Key="myProvider" MethodName="GetValues" ObjectType="{x:Type ns:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:Gender" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Grid>
        <DataGrid Name="myDataGrid" AutoGenerateColumns="False">
            <DataGrid.Columns>
             <!--ID and Name are text field so we'll select DataGridTextColumn--> 
            <DataGridTextColumn Header="StudentId" Binding="{Binding Id}" />
            <DataGridTextColumn Header="Name Of Student" Binding="{Binding Name}" />
            <DataGridTextColumn Header="Name Of Student" Binding="{Binding Name}" />
             <!--we need DataGridCheckBoxColumn to include booleans-->
            <DataGridCheckBoxColumn Header="DoesStudentPlaySoccer" Binding="{Binding IsSoccerPlayer}"/>
                
                <!-- Binding enum is little tricky let's see we have to include ObjectDataProvider
                Enum is a value type not a reference type so we can't define enums inside class
                Enums are ComboBoxes in DataGrid-->

                <DataGridComboBoxColumn Header="Gender" SelectedItemBinding="{Binding Gender}" ItemsSource="{Binding Source={StaticResource myProvider}}"/>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
